---
- name: Install Development Tools on Template VMs
  hosts: "{{ target_hosts | default('template_vms') }}"
  become: true
  vars:
    nodejs_version: "20"
    terraform_version: "1.7.0"
    packer_version: "1.10.0"
    go_version: "1.22.0"
    python_packages:
      - pipx
      - poetry
      - black
      - flake8
      - mypy
      - pytest
      - jupyter
      - ansible
      - ansible-lint

  tasks:
    # Node.js Installation
    - name: Add NodeSource GPG key
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present

    - name: Add NodeSource repository
      apt_repository:
        repo: "deb https://deb.nodesource.com/node_{{ nodejs_version }}.x {{ ansible_distribution_release }} main"
        state: present
        update_cache: true

    - name: Install Node.js
      apt:
        name: nodejs
        state: present

    - name: Install global npm packages
      npm:
        name: "{{ item }}"
        global: true
      loop:
        - yarn
        - pnpm
        - typescript
        - "@vue/cli"
        - "@angular/cli"
        - create-react-app
        - nodemon
        - pm2

    # Python Development Tools
    - name: Install Python development packages
      apt:
        name:
          - python3-dev
          - python3-pip
          - python3-venv
          - python3-setuptools
          - python3-wheel
          - build-essential
          - libffi-dev
          - libssl-dev
        state: present

    - name: Install Python packages via pip
      pip:
        name: "{{ python_packages }}"
        state: present
        executable: pip3

    # Go Installation
    - name: Download Go
      get_url:
        url: https://golang.org/dl/go{{ go_version }}.linux-amd64.tar.gz
        dest: /tmp/go{{ go_version }}.linux-amd64.tar.gz

    - name: Remove old Go installation
      file:
        path: /usr/local/go
        state: absent

    - name: Extract Go
      unarchive:
        src: /tmp/go{{ go_version }}.linux-amd64.tar.gz
        dest: /usr/local
        remote_src: true
        creates: /usr/local/go/bin/go

    - name: Add Go to PATH in profile
      lineinfile:
        path: /etc/profile
        line: "export PATH=$PATH:/usr/local/go/bin"
        create: true

    # Terraform Installation
    - name: Add HashiCorp GPG key
      apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        state: present

    - name: Add HashiCorp repository
      apt_repository:
        repo: "deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
        state: present
        update_cache: true

    - name: Install Terraform
      apt:
        name: terraform={{ terraform_version }}-*
        state: present
        allow_downgrade: true

    - name: Install Packer
      apt:
        name: packer={{ packer_version }}-*
        state: present
        allow_downgrade: true

    # Development Tools
    - name: Install additional development tools
      apt:
        name:
          - git
          - git-lfs
          - vim
          - neovim
          - tmux
          - screen
          - htop
          - tree
          - jq
          - yq
          - curl
          - wget
          - unzip
          - zip
          - rsync
          - ssh
          - gpg
        state: present

    # VS Code Server (code-server)
    - name: Download code-server
      get_url:
        url: https://github.com/coder/code-server/releases/latest/download/code-server_amd64.deb
        dest: /tmp/code-server_amd64.deb

    - name: Install code-server
      apt:
        deb: /tmp/code-server_amd64.deb
        state: present

    # Shell enhancements
    - name: Install zsh
      apt:
        name: zsh
        state: present

    - name: Install oh-my-zsh for root
      shell: |
        if [ ! -d /root/.oh-my-zsh ]; then
          sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
        fi
      args:
        creates: /root/.oh-my-zsh

    - name: Install additional shell tools
      apt:
        name:
          - fzf
          - ripgrep
          - fd-find
          - bat
          - exa
        state: present

    - name: Clean up downloaded files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/go{{ go_version }}.linux-amd64.tar.gz
        - /tmp/code-server_amd64.deb
