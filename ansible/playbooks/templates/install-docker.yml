---
- name: Install Docker on Template VMs
  hosts: "{{ target_hosts | default('template_vms') }}"
  become: true
  vars:
    docker_users: ["{{ ansible_user }}"]
    docker_edition: "ce"
    docker_packages:
      - "docker-{{ docker_edition }}"
      - "docker-{{ docker_edition }}-cli"
      - "docker-{{ docker_edition }}-rootless-extras"
    docker_packages_state: present

  tasks:
    - name: Ensure old versions of Docker are not installed
      package:
        name:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent

    - name: Ensure dependencies are installed
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: true

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
        state: present

    - name: Verify GPG key fingerprint
      apt_key:
        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: >-
          deb [arch={{ ansible_architecture | replace('x86_64', 'amd64') }}]
          https://download.docker.com/linux/{{ ansible_distribution | lower }}
          {{ ansible_distribution_release }} stable
        state: present
        update_cache: true

    - name: Install Docker packages
      apt:
        name: "{{ docker_packages }}"
        state: "{{ docker_packages_state }}"
        update_cache: true
      notify: restart docker

    - name: Install Docker Compose Plugin
      apt:
        name: docker-compose-plugin
        state: present

    - name: Ensure Docker is started and enabled at boot
      systemd:
        name: docker
        state: started
        enabled: true

    - name: Ensure docker users are added to the docker group
      user:
        name: "{{ item }}"
        groups: docker
        append: true
      loop: "{{ docker_users }}"

    - name: Create Docker daemon configuration directory
      file:
        path: /etc/docker
        state: directory
        mode: "0755"

    - name: Configure Docker daemon
      copy:
        content: |
          {
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "10m",
              "max-file": "3"
            },
            "storage-driver": "overlay2"
          }
        dest: /etc/docker/daemon.json
        mode: "0644"
      notify: restart docker

    - name: Install additional Docker tools
      pip:
        name:
          - docker
          - docker-compose
        state: present
        executable: pip3
      when: ansible_python_version is version('3.0', '>=')

  handlers:
    - name: restart docker
      systemd:
        name: docker
        state: restarted
